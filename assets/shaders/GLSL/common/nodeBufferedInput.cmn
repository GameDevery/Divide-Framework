#ifndef _NODE_BUFFERED_INPUT_CMN_
#define _NODE_BUFFERED_INPUT_CMN_

#include "nodeDataDefinition.cmn"

#if defined(OVERRIDE_DATA_IDX)
uniform uint DATA_IDX = 0u;
#else
#define DATA_IDX VAR.dvd_baseInstance
#endif

layout(binding = BUFFER_NODE_INFO, std430) coherent readonly buffer dvd_MatrixBlock
{
    NodeData dvd_Matrices[MAX_VISIBLE_NODES];
};

#define dvd_WorldMatrix(index) dvd_Matrices[index]._worldMatrix
//#define dvd_PrevWorldMatrix(index) mat4x3(dvd_Matrices[index]._prevWorldMatrix)
#define dvd_PrevWorldMatrix(index) dvd_Matrices[index]._prevWorldMatrix
#define dvd_NormalMatrixW(index) mat3(dvd_Matrices[index]._normalMatrixW)
#define dvd_NormalMatrixWV(index) (mat3(dvd_ViewMatrix) * dvd_NormalMatrixW(index))

#define dvd_boneCount uint(dvd_Matrices[DATA_IDX]._normalMatrixW[0][3])
#define dvd_texOperation uint(dvd_Matrices[DATA_IDX]._prevWorldMatrix[0][3])
#define dvd_bumpMethod uint(dvd_Matrices[DATA_IDX]._prevWorldMatrix[1][3])
#define dvd_reserved1 uint(dvd_Matrices[DATA_IDX]._prevWorldMatrix[2][3])
#define dvd_reseverd2 uint(dvd_Matrices[DATA_IDX]._prevWorldMatrix[3][3])

//buffer_matProperties:
//  x - isSelected/isHighlighted
//  y - isShadowMapped
//  z - lodLevel
//  w - occlusion cull flag

#define buffer_matProperties dvd_Matrices[DATA_IDX]._colourMatrix[3]

#define dvd_selectionFlag   buffer_matProperties.x
#define dvd_parallaxFactor  buffer_matProperties.y
#define dvd_lodLevel int(buffer_matProperties.z)
#define dvd_dataFlag int(buffer_matProperties.w)

#if defined(FRAG_SHADER)
#define dvd_reflectionIndex uint(dvd_Matrices[DATA_IDX]._normalMatrixW[1][3])
#define dvd_refractionIndex uint(dvd_Matrices[DATA_IDX]._normalMatrixW[2][3])
#define dvd_receivesShadow  (dvd_Matrices[DATA_IDX]._colourMatrix[2][3] > 0.1f)
#endif

#endif //_NODE_BUFFERED_INPUT_CMN_
