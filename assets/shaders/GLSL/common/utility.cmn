#ifndef _UTILITY_CMN_
#define _UTILITY_CMN_

//ref: http://theorangeduck.com/page/avoiding-shader-conditionals
#define when_eq(x, y) (1.f - abs(sign(x - y)))
#define when_neq(x, y) abs(sign(x - y))
#define when_gt(x, y)  max(sign(x - y), 0.f)
#define when_lt(x, y)  max(sign(y - x), 0.f)
#define when_ge(x, y) (1.f - when_lt(x, y))
#define when_le(x, y) (1.f - when_gt(x, y))
#define MSToSeconds(ms) (ms * 0.001f)
#define UNPACK_VEC3(VAL) (2.f * fract(vec3(1.f, 256.f, 65536.f) * VAL) - 1.f)
#define QUATERNION_ROTATE(V, Q) (V + 2.f * cross(Q.xyz, cross(Q.xyz, V) + Q.w * V))
vec3 homogenize(in vec4 v) { return (v.xyz / v.w); }

#endif //_UTILITY_CMN_
