set(AVX512_OPT OFF)
set(AVX2_OPT OFF)
set(AVX_OPT OFF)
set(SSE41_OPT OFF)
set(SSE42_OPT OFF)
set(FMA4_OPT OFF)
set(BMI2_OPT OFF)
set(F16C_OPT OFF)
set(EXTENSIONS "")

function (Toggle_Available_Vector_Extensions)

    if(APPLE)
        set(SSE42_OPT ON)
        set(SSE41_OPT ON)
        message("macOS detected: Only SSE4.1 enabled, skipping other vector extension checks.")
    else()
        AutodetectHostArchitecture()
        OptimizeForArchitecture()

        foreach(flag ${_enable_vector_unit_list})
            string(TOUPPER "${flag}" flag)
            string(REPLACE "\." "_" flag "${flag}")
            string(REPLACE "_" "" flag "${flag}")

            if("${flag}" MATCHES "AVX512F")
                set(AVX512_OPT ON)
                set(BMI2_OPT ON)
                set(F16C_OPT ON)
            endif()

            if("${flag}" MATCHES "AVX2")
                set(AVX2_OPT ON)
                set(BMI2_OPT ON)
                set(F16C_OPT ON)
            endif()

            if("${flag}" MATCHES "AVX")
                set(AVX_OPT ON)
            endif()

            if("${flag}" MATCHES "SSE42")
                set(SSE42_OPT ON)
            endif()

            if("${flag}" MATCHES "SSE41")
                set(SSE41_OPT ON)
            endif()

            if("${flag}" MATCHES "fma4")
                set(FMA4_OPT ON)
            endif()

            if("${flag}" MATCHES "bmi2")
                set(BMI2_OPT ON)
            endif()

            if("${flag}" MATCHES "f16c")
                set(F16C_OPT ON)
            endif()

        endforeach(flag)
    endif()

    if (AVX512_OPT)
        set(EXTENSIONS ${EXTENSIONS} " AVX512 ")
        add_compile_definitions(HAS_AVX512)
        add_compile_definitions(HAS_AVX2)
        add_compile_definitions(HAS_AVX)
        add_compile_definitions(HAS_SSE42)
         if (MSVC_COMPILER)
            add_compile_options(/arch:AVX512)
        else()
            add_compile_options(-mavx512f -mavx512vl -mavx512dq -mavx2 -mpopcnt)
        endif()
    else()
        set(EXTENSIONS ${EXTENSIONS} " NO-AVX512 ")

        if (AVX2_OPT)
            set(EXTENSIONS ${EXTENSIONS} " AVX2 ")
            add_compile_definitions(HAS_AVX2)
            add_compile_definitions(HAS_AVX)
            add_compile_definitions(HAS_SSE42)
            if (MSVC_COMPILER)
                add_compile_options(/arch:AVX2)
            else()
                add_compile_options(-mavx2 -mbmi -mpopcnt)
            endif()
        else()
            set(EXTENSIONS ${EXTENSIONS} " NO-AVX2 ")

            if (AVX_OPT)
                set(EXTENSIONS ${EXTENSIONS} " AVX ")
                add_compile_definitions(HAS_AVX)
                add_compile_definitions(HAS_SSE42)
                if (MSVC_COMPILER)
                    add_compile_options(/arch:AVX)
                else()
                    add_compile_options(-mavx -mpopcnt)
                endif()
            else()
                set(EXTENSIONS ${EXTENSIONS} " NO-AVX ")
                if (NOT MSVC_COMPILER)
                    add_compile_options(-mno-avx)
                endif()
            endif()
        endif()
    endif()

    if (SSE42_OPT)
        set(EXTENSIONS ${EXTENSIONS} " SSE4.2 ")
        add_compile_definitions(HAS_SSE42)
        if (NOT MSVC_COMPILER)
            add_compile_options(-msse4.2 -mpopcnt)
        endif()
    else()
        set(EXTENSIONS ${EXTENSIONS} " NO-SSE4.2 ")
        if (SSE41_OPT)
            set(EXTENSIONS ${EXTENSIONS} " SSE4.1 ")
            if (NOT MSVC_COMPILER)
                add_compile_options(-msse4.1)
            endif()
        else()
            set(EXTENSIONS ${EXTENSIONS} " NO-SSE4.1 ")
            message(FATAL_ERROR "SSE4.1 was not detected. SSE4.1 is a minimum requirment in order for the build to proceed!")
        endif()
    endif()

    if(FMA4_OPT)
        set(EXTENSIONS ${EXTENSIONS} " FMA4 ")
        if (NOT MSVC_COMPILER)
            add_compile_options(-mfma)
        endif()
    else()
        set(EXTENSIONS ${EXTENSIONS} " NO-FMA4 ")
    endif()

    if(BMI2_OPT)
        set(EXTENSIONS ${EXTENSIONS} " BMI2 ")
        if (NOT MSVC_COMPILER)
            add_compile_options(-mbmi -mlzcnt)
        endif()
    else()
        set(EXTENSIONS ${EXTENSIONS} " NO-BMI2 ")
    endif()

    if(F16C_OPT)
        set(EXTENSIONS ${EXTENSIONS} " F16C ")
        if (NOT MSVC_COMPILER)
            add_compile_options(-mf16c)
        endif()
    else()
        set(EXTENSIONS ${EXTENSIONS} " NO-F16C ")
    endif()

    set(AVX512_OPT  ${AVX512_OPT} PARENT_SCOPE)
    set(AVX2_OPT    ${AVX2_OPT}   PARENT_SCOPE)
    set(AVX_OPT     ${AVX_OPT}    PARENT_SCOPE)
    set(SSE41_OPT   ${SSE41_OPT}  PARENT_SCOPE)
    set(SSE42_OPT   ${SSE42_OPT}  PARENT_SCOPE)
    set(FMA4_OPT    ${FMA4_OPT}   PARENT_SCOPE)
    set(BMI2_OPT    ${BMI2_OPT}   PARENT_SCOPE)
    set(F16C_OPT    ${F16C_OPT}   PARENT_SCOPE)
    set(EXTENSIONS} ${EXTENSIONS} PARENT_SCOPE)

    message("Available extensions: " ${EXTENSIONS})

endfunction()
