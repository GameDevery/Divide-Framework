# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: Linux - Clang

on:
  push:
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
    
jobs:
  job:
    name: ${{ matrix.os }}-${{ github.workflow }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 0

    - uses: lukka/get-cmake@latest
    - name: List $RUNNER_WORKSPACE before vcpkg is setup
      run: find $RUNNER_WORKSPACE
      shell: bash
      
    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      id: runvcpkg
      with:
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        vcpkgJsonGlob: 'vcpkg-configuration.json'

    - name: List $RUNNER_WORKSPACE before build
      run: find $RUNNER_WORKSPACE
      shell: bash

    - name: Prints output of run-vcpkg's action.
      run: echo "root='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}', triplet='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_DEFAULT_TRIPLET_OUT }}' "

    - name: Build and test Editor in Release mode
      uses: lukka/run-cmake@v10
      id: runcmake_editor_release
      with:
        configurePreset: 'unixlike-clang-release-editor'
        buildPreset: 'unixlike-clang-release-editor'
        testPreset: 'test-unixlike-clang-release-editor'

    - name: List $RUNNER_WORKSPACE after first build
      run: find $RUNNER_WORKSPACE
      shell: bash

    - name: Build and test Game in Debug mode
      uses: lukka/run-cmake@v10
      id: runcmake_game_debug
      with:
        configurePreset: 'unixlike-clang-debug'
        buildPreset: 'unixlike-clang-debug'
        testPreset: 'test-unixlike-clang-debug'

    - name: List $RUNNER_WORKSPACE after second build
      run: find $RUNNER_WORKSPACE
      shell: bash
