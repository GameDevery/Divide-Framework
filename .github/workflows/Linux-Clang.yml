# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: Linux - Clang

on:
  push:
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
    
jobs:
  job:
    name: ${{ matrix.os }}-${{ github.workflow }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
        #fetch-depth: 0

    - uses: lukka/get-cmake@3.29.2

    - name: Patch for linux build
      run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build

    - name: Patch for linux build
      run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build

    - name: Restore from cache and setup vcpkg executable and data files.
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgJsonGlob: 'vcpkg.json'

    - name: Build and test Editor in Release mode
      uses: lukka/run-cmake@v10
      with:
        configurePreset: 'unixlike-clang-release-editor'
        buildPreset: 'unixlike-clang-release-editor'
        testPreset: 'test-unixlike-clang-release-editor'

    - name: Build and test Game in Debug mode
      uses: lukka/run-cmake@v10
      with:
        configurePreset: 'unixlike-clang-debug'
        buildPreset: 'unixlike-clang-debug'
        testPreset: 'test-unixlike-clang-debug'
