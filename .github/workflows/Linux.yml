name: Linux Builds

on:
  schedule:
    - cron: "0 0 * * *"
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
    inputs:
      runner_type:
        description: 'Runner type to run on (GitHub or Self Hosted)'
        required: false
        default: 'GitHub'
        type: choice
        options:
        - GitHub
        - self-hosted

run-name: Linux Build - ${{ github.ref_name }} - ${{ github.event.inputs.runner_type || 'GitHub Runner' }}

jobs:
  check_date:
   runs-on: ubuntu-latest
   outputs:
      should_run: ${{ steps.check.outputs.should_run }}
   steps:
      - uses: actions/checkout@v4 
      - id: check
        uses: ./.github/actions/check-date

  info_job:
    needs: check_date
    if: ${{ needs.check_date.outputs.should_run != 'false' }}
    name: Ubuntu latest - Print Info
    runs-on: ${{ github.event.inputs.runner_type == 'self-hosted' && fromJson('["self-hosted","Linux"]') || 'ubuntu-latest' }}

    steps:
    - uses: actions/checkout@v4
  
    - name: Print GCC version
      run: g++ --version 

    - name: Print CLANG version
      run: clang --version 

  build_job:
    needs: info_job
    name: Ubuntu latest - ${{ matrix.compiler }} ${{ matrix.build-type }} ${{ matrix.configuration }}
    runs-on: ${{ github.event.inputs.runner_type == 'self-hosted' && fromJson('["self-hosted","Linux"]') || 'ubuntu-latest' }}
    strategy:
      fail-fast: true
      matrix:
        compiler: [gcc, clang]
        build-type: [editor, game]
        configuration: [debug, release]
        exclude:
          - compiler: clang
            configuration: profile
        include:
          - compiler: gcc
            build-type: editor
            configuration: profile
          - compiler: gcc
            build-type: game
            configuration: profile

    timeout-minutes: 180

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/build-setup/linux
        with:
          runner_type: ${{ github.event.inputs.runner_type || 'GitHub' }}
          compiler: ${{ matrix.compiler }}
          build-type: ${{ matrix.build-type }}
          configuration: ${{ matrix.configuration }}

      - uses: ./.github/actions/cmake-build/linux
        with:
          compiler: ${{ matrix.compiler }}
          build-type: ${{ matrix.build-type }}
          configuration: ${{ matrix.configuration }}

  output_job:
    needs: build_job
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve results
        id: results
        run: |
          if [[ "${{ needs.build_job.result }}" == "failure" ]]; then
            echo "status=Build failed" >> $GITHUB_OUTPUT
          elif [[ "${{ needs.build_job.result }}" == "cancelled" ]]; then
            echo "status=Builds cancelled" >> $GITHUB_OUTPUT
          else
            echo "status=Success" >> $GITHUB_OUTPUT
          fi

      - name: Report Status
        run: echo "${{ steps.results.outputs.status }}"
