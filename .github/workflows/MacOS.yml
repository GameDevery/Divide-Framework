# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: macOS Builds

on:
  schedule:
    - cron: "0 0 * * *"
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
    
jobs:
  check_date:
    uses: .github/actions/reusable/check-date.yml

  info_job:
    needs: check_date
    if: ${{ needs.check_date.outputs.should_run != 'false' }}

    name: macOS - Print Info
    runs-on: ${{ matrix.os }}
    outputs:
      clang_version: ${{ steps.clang_info.outputs.version }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]

    steps:
      - name: Get CLANG version
        id: clang_info
        run: |
          version=$(clang --version | head -n 1)
          echo "version=$version" >> $GITHUB_OUTPUT

  build_job:
    needs: info_job
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        build-type: [editor, game]

    name: macOS - Clang ${{ matrix.build-type }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: .github/actions/build-setup/macos

      - uses: .github/actions/cmake-build/macos
        with:
          build-type: ${{ matrix.build-type }}

  output_job:
    needs: [info_job, build_job]
    if: always()
    runs-on: macos-latest
    steps:
      - name: Retrieve results
        id: results
        run: |
          if [[ "${{ needs.build_job.result }}" == "failure" || "${{ needs.info_job.result }}" == "failure" ]]; then
            echo "status=Build or Info job failed" >> $GITHUB_OUTPUT
          elif [[ "${{ needs.build_job.result }}" == "cancelled" || "${{ needs.info_job.result }}" == "cancelled" ]]; then
            echo "status=Build or Info job cancelled" >> $GITHUB_OUTPUT
          else
            echo "status=Success" >> $GITHUB_OUTPUT
          fi

      - name: Build Summary
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "Status: ${{ steps.results.outputs.status }}" >> $GITHUB_STEP_SUMMARY
          echo "Clang Version: ${{ needs.info_job.outputs.clang_version }}" >> $GITHUB_STEP_SUMMARY